#!/bin/ash /etc/rc.common
# shellcheck shell=dash

USE_PROCD=1
START=20
STOP=20

# Taken from https://github.com/python/cpython/blob/f4fcfdf8c593611f98b9358cc0c5604c15306465/Lib/shlex.py#L321-L332
quote () {
    printf "'"
    # replaces ' with '"'"'
    sed "s/'/'"'"'"'"'"'"'/g"
    printf "'"
}

quote_elem () {
    printf "%s" "$1" | quote; printf " "
}

config_list_quoted () {
    config_list_foreach "$1" "$2" quote_elem
}

first_in () {
    local arg ref="$1"
    shift
    for arg in "$@"; do
        [ "$ref" = "$arg" ] && return 0
    done
    return 1
}

on_unique_args () {
    # Calls func on every unique argument
    local arg func="$1";
    shift
    for arg in "$@"; do
        shift;
        first_in "$arg" "$@" || "$func" "$arg"
    done
}

config_iface () {
    local iface="$1"
    shift
    local macs_file wpa_psk_file ifname
    config_get ifname "$iface" ifname
    if ! first_in "$ifname" "$@"; then
        # Interface configured but no password uses it
        return;
    fi
    config_get macs_file "$iface" macs_file
    config_get wpa_psk_file "$iface" wpa_psk_file ""

    config_iface_defaults "$ifname" "$wpa_psk_file" "$macs_file"
}

config_iface_defaults () {
    local ifname="$1" wpa_psk_file="$2" macs_file="$3"
    if [ -z "$wpa_psk_file" ]; then
        wpa_psk_file="/var/run/hostapd-$ifname.psk"
    fi

    if ! [ -r "$macs_file" ]; then
        hostapd_slppsk "$ifname" init "$wpa_psk_file"
    else
        hostapd_slppsk "$ifname" init "$wpa_psk_file" "$macs_file"
    fi
}

config_password () {
    local password="$1"
    shift
    local master_pwd temp_entries vlanid ppsk_len wps params
    config_get master_pwd "$password" master_password
    config_get temp_entries "$password" max_temp_entries 20
    config_get vlanid "$password" vlanid 0
    config_get ppsk_len "$password" ppsk_len_bytes 12
    config_get_bool wps "$password" wps 0

    if [ "$wps" != 0 ]; then
        params="wps=1"
    fi
    if [ "$vlanid" != 0 ]; then
        params="$params vlanid=$vlanid"
    fi

    # It's tempting to init for one interface and then symlink
    # that password directory to the rest of the interfaces,
    # but that will mess with the sync as one lock file is held
    # for one interface, thus simultaneous writes could occur
    # when an event is fired for each interface

    eval "set -- $(config_list_quoted "$password" ifname)"
    for ifname in "$@"; do
        MASTER_PSK="$master_pwd" hostapd_slppsk \
            "$ifname" init-ppsk \
            "$temp_entries" \
            "$params" \
            "$ppsk_len"
    done
}

# shellcheck disable=SC2120
get_implicit_ifaces () {
    eval "set -- $(config_foreach config_list_quoted password ifname)"
    on_unique_args quote_elem "$@"
}

start_instance () {
    local ifname="$1" pid_file
    pid_file="$(hostapd_slppsk "$ifname" pid-file)"

    procd_open_instance "$ifname"
    procd_set_param command hostapd_slppsk "$ifname" listen
    procd_set_param respawn
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_set_param pidfile "$pid_file"
    procd_close_instance
}

start_service () {
    local impl_iface
    config_load slppsk
    eval "set -- $(get_implicit_ifaces)"

    for impl_iface in "$@"; do
        config_iface_defaults "$impl_iface" "" ""
    done
    # Explicitly configured ifaces will overwrite the implicit ones
    config_foreach config_iface iface "$@"
    config_foreach config_password password
    for impl_iface in "$@"; do
        start_instance "$impl_iface"
    done
}

service_stopped () {
    config_load slppsk
    eval "set -- $(get_implicit_ifaces)"
    # TODO: Delete interfaces based on service instances
    for ifname in "$@"; do
        hostapd_slppsk "$ifname" remove
    done
}

service_triggers() {
    procd_add_reload_trigger slppsk
}

reload_service() {
    stop
    start
}
